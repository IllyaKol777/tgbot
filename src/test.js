// const { Sequelize, DataTypes } = require('sequelize');
//
// // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
// const sequelize = new Sequelize({
//     dialect: 'sqlite',
//     storage: './database.sqlite'
// });
//
// // –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –º–æ–¥–µ–ª—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –¥–æ–¥–∞–≤–∞–Ω–Ω—è–º –∫–æ–ª–æ–Ω–∫–∏ username
// const User = sequelize.define('User', {
//     telegramId: {
//         type: DataTypes.STRING,
//         allowNull: false,
//         unique: true
//     },
//     username: {
//         type: DataTypes.STRING,  // –î–æ–¥–∞–Ω–æ –∫–æ–ª–æ–Ω–∫—É username
//         allowNull: false
//     },
//     isAdmin: {
//         type: DataTypes.BOOLEAN,
//         defaultValue: false
//     }
// });
//
// (async () => {
//     try {
//         // –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –º–æ–¥–µ–ª—ñ –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö (–æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ —Ç–∞–±–ª–∏—Ü—ñ)
//         await sequelize.sync({ alter: true });
//
//         // –î–æ–¥–∞–≤–∞–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
//         const adminUser = await User.create({
//             telegramId: '5755114757',
//             username: 'mrakeno',
//             isAdmin: true
//         });
//
//         console.log('–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–æ–¥–∞–Ω–æ:', adminUser.toJSON());
//     } catch (error) {
//         console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', error);
//     } finally {
//         await sequelize.close();
//     }
// })();

//
// const { Sequelize, DataTypes } = require('sequelize');
// const { StartPost, NextPost, AviatorPost, MinesPost, SubscribePost, AdminPost } = require('./models');
//
// // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Sequelize
// const sequelize = new Sequelize({
//     dialect: 'sqlite',
//     storage: './database.sqlite'
// });
//
// async function insertTestData() {
//     try {
//         // –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –º–æ–¥–µ–ª–µ–π –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö
//         await sequelize.sync();
//
//         // –í—Å—Ç–∞–≤–∫–∞ –¥–∞–Ω–∏—Ö —É —Ç–∞–±–ª–∏—Ü—é start_post
//         await StartPost.create({
//             text: 'These robot signals are for games such as :\nüöÄAVIATOR\nüí£MINES.\nTo find out how the robots work, click on the "Learn more" button.'
//         });
//
//         // –í—Å—Ç–∞–≤–∫–∞ –¥–∞–Ω–∏—Ö —É —Ç–∞–±–ª–∏—Ü—é next_post
//         await NextPost.create({
//             text: 'Select the BOT you wish to receive ‚úçÔ∏è',
//             video_name: 'next_video'
//         });
//
//         // –í—Å—Ç–∞–≤–∫–∞ –¥–∞–Ω–∏—Ö —É —Ç–∞–±–ª–∏—Ü—é aviator_post
//         await AviatorPost.create({
//             text: 'üöÄAviator Bot is a bot that calculates average odds and divides them into 10 matches. Following the signals of this bot you have to place 10 bets with the same odds. You activate automatic betting and automatic withdrawal and every 10 games you change the odds. You can get access to this bot from the administrator by writing to him.',
//             video_name: 'aviator_video'
//         });
//
//         // –í—Å—Ç–∞–≤–∫–∞ –¥–∞–Ω–∏—Ö —É —Ç–∞–±–ª–∏—Ü—é mines_post
//         await MinesPost.create({
//             text: 'üí£Mines Bot is a bot that detects the approximate location of bombs. The asterisks indicate the boxes where you must click to avoid hitting the bomb. Repeat the bot and little by little your balance will start to grow. Access to this bot can be obtained from the administrator by writing to him.',
//             video_name: 'mines_video'
//         });
//
//         // –í—Å—Ç–∞–≤–∫–∞ –¥–∞–Ω–∏—Ö —É —Ç–∞–±–ª–∏—Ü—é subscribe_post
//         await SubscribePost.create({
//             text: 'üëá Subscribe to the channel',
//             link: 'https://t.me/+kgiTI6v1zDtjMjAy'
//         });
//
//         // –í—Å—Ç–∞–≤–∫–∞ –¥–∞–Ω–∏—Ö —É —Ç–∞–±–ª–∏—Ü—é admin_post
//         await AdminPost.create({
//             text: 'üëá Write to the Administrator üëá.',
//             link: 'https://t.me/peterfloyd_bots'
//         });
//
//         console.log('–î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω—ñ –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö.');
//     } catch (error) {
//         console.error('–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–≤—Ü—ñ –¥–∞–Ω–∏—Ö:', error);
//     } finally {
//         await sequelize.close();
//     }
// }
//
// insertTestData();


const { User } = require('./models');

async function addAdmin() {
    try {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —ñ—Å–Ω—É—î –≤–∂–µ —Ç–∞–∫–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤ –±–∞–∑—ñ
        let user = await User.findOne({ where: { telegramId: '609460211' } });

        if (!user) {
            // –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ–º–∞—î –≤ –±–∞–∑—ñ, –¥–æ–¥–∞—î–º–æ –π–æ–≥–æ
            user = await User.create({
                telegramId: '609460211',
                username: 'ginexty',
                isAdmin: true
            });
            console.log(`–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ${user.username} –¥–æ–¥–∞–Ω–æ —è–∫ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.`);
        } else {
            // –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∂–µ —î –≤ –±–∞–∑—ñ, –æ–Ω–æ–≤–ª—é—î–º–æ –π–æ–≥–æ —Å—Ç–∞—Ç—É—Å
            await User.update({ isAdmin: true }, { where: { telegramId: '609460211' } });
            console.log(`–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ${user.username} –≤–∂–µ —ñ—Å–Ω—É—î. –°—Ç–∞—Ç—É—Å –æ–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.`);
        }
    } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', error);
    }
}

// –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
addAdmin();

